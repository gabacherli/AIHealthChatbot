version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: health-chatbot-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-dev-root-password}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-health_chatbot}
      - MYSQL_USER=${MYSQL_USER:-health_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-dev-user-password}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./backend/database/init:/docker-entrypoint-initdb.d:ro
      - ./backend/database/config/mysql.cnf:/etc/mysql/conf.d/custom.cnf:ro
    networks:
      - health-chatbot-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-dev-root-password}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password

  qdrant:
    image: qdrant/qdrant:latest
    container_name: health-chatbot-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - health-chatbot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: health-chatbot-backend
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - PORT=5000
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-dev-jwt-key-change-in-production}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEV_JWT_KEY=${DEV_JWT_KEY:-dev-jwt-key}
      - DEV_OPENAI_KEY=${DEV_OPENAI_KEY}
      - PROD_JWT_KEY=${PROD_JWT_KEY}
      - PROD_OPENAI_KEY=${PROD_OPENAI_KEY}
      - VECTOR_DB_URL=http://qdrant:6333
      - VECTOR_DB_COLLECTION=health_documents
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER:-health_user}:${MYSQL_PASSWORD:-dev-user-password}@mysql:3306/${MYSQL_DATABASE:-health_chatbot}
    ports:
      - "5000:5000"
    volumes:
      - ./backend/data:/app/data:ro
      - backend-uploads:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    networks:
      - health-chatbot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: health-chatbot-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - health-chatbot-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  health-chatbot-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  backend-data:
    driver: local
  backend-uploads:
    driver: local
  qdrant-data:
    driver: local
